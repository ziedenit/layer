import { OnInit, ChangeDetectorRef, EventEmitter, TemplateRef, OnChanges, SimpleChanges } from '@angular/core';
import { SelectItem } from 'primeng/api';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/dropdown';
import * as ɵngcc3 from '@angular/forms';
import * as ɵngcc4 from 'primeng/api';
export declare class Paginator implements OnInit, OnChanges {
    private cd;
    pageLinkSize: number;
    onPageChange: EventEmitter<any>;
    style: any;
    styleClass: string;
    alwaysShow: boolean;
    templateLeft: TemplateRef<any>;
    templateRight: TemplateRef<any>;
    dropdownAppendTo: any;
    dropdownScrollHeight: string;
    currentPageReportTemplate: string;
    showCurrentPageReport: boolean;
    totalRecords: number;
    rows: number;
    rowsPerPageOptions: any[];
    pageLinks: number[];
    rowsPerPageItems: SelectItem[];
    paginatorState: any;
    _first: number;
    constructor(cd: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnChanges(simpleChange: SimpleChanges): void;
    first: number;
    updateRowsPerPageOptions(): void;
    isFirstPage(): boolean;
    isLastPage(): boolean;
    getPageCount(): number;
    calculatePageLinkBoundaries(): number[];
    updatePageLinks(): void;
    changePage(p: number): void;
    updateFirst(): void;
    getPage(): number;
    changePageToFirst(event: any): void;
    changePageToPrev(event: any): void;
    changePageToNext(event: any): void;
    changePageToLast(event: any): void;
    onPageLinkClick(event: any, page: any): void;
    onRppChange(event: any): void;
    updatePaginatorState(): void;
    readonly currentPageReport: string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Paginator>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Paginator, "p-paginator", never, {
    "pageLinkSize": "pageLinkSize";
    "alwaysShow": "alwaysShow";
    "dropdownScrollHeight": "dropdownScrollHeight";
    "currentPageReportTemplate": "currentPageReportTemplate";
    "totalRecords": "totalRecords";
    "rows": "rows";
    "first": "first";
    "style": "style";
    "styleClass": "styleClass";
    "templateLeft": "templateLeft";
    "templateRight": "templateRight";
    "dropdownAppendTo": "dropdownAppendTo";
    "showCurrentPageReport": "showCurrentPageReport";
    "rowsPerPageOptions": "rowsPerPageOptions";
}, {
    "onPageChange": "onPageChange";
}, never>;
}
export declare class PaginatorModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<PaginatorModule, [typeof Paginator], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.DropdownModule, typeof ɵngcc3.FormsModule, typeof ɵngcc4.SharedModule], [typeof Paginator, typeof ɵngcc2.DropdownModule, typeof ɵngcc3.FormsModule, typeof ɵngcc4.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<PaginatorModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnaW5hdG9yLmQudHMiLCJzb3VyY2VzIjpbInBhZ2luYXRvci5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7O0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXlDQTs7OztBQUVBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT25Jbml0LCBDaGFuZ2VEZXRlY3RvclJlZiwgRXZlbnRFbWl0dGVyLCBUZW1wbGF0ZVJlZiwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTZWxlY3RJdGVtIH0gZnJvbSAncHJpbWVuZy9hcGknO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUGFnaW5hdG9yIGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xuICAgIHByaXZhdGUgY2Q7XG4gICAgcGFnZUxpbmtTaXplOiBudW1iZXI7XG4gICAgb25QYWdlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBzdHlsZTogYW55O1xuICAgIHN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICBhbHdheXNTaG93OiBib29sZWFuO1xuICAgIHRlbXBsYXRlTGVmdDogVGVtcGxhdGVSZWY8YW55PjtcbiAgICB0ZW1wbGF0ZVJpZ2h0OiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGRyb3Bkb3duQXBwZW5kVG86IGFueTtcbiAgICBkcm9wZG93blNjcm9sbEhlaWdodDogc3RyaW5nO1xuICAgIGN1cnJlbnRQYWdlUmVwb3J0VGVtcGxhdGU6IHN0cmluZztcbiAgICBzaG93Q3VycmVudFBhZ2VSZXBvcnQ6IGJvb2xlYW47XG4gICAgdG90YWxSZWNvcmRzOiBudW1iZXI7XG4gICAgcm93czogbnVtYmVyO1xuICAgIHJvd3NQZXJQYWdlT3B0aW9uczogYW55W107XG4gICAgcGFnZUxpbmtzOiBudW1iZXJbXTtcbiAgICByb3dzUGVyUGFnZUl0ZW1zOiBTZWxlY3RJdGVtW107XG4gICAgcGFnaW5hdG9yU3RhdGU6IGFueTtcbiAgICBfZmlyc3Q6IG51bWJlcjtcbiAgICBjb25zdHJ1Y3RvcihjZDogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoc2ltcGxlQ2hhbmdlOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBmaXJzdDogbnVtYmVyO1xuICAgIHVwZGF0ZVJvd3NQZXJQYWdlT3B0aW9ucygpOiB2b2lkO1xuICAgIGlzRmlyc3RQYWdlKCk6IGJvb2xlYW47XG4gICAgaXNMYXN0UGFnZSgpOiBib29sZWFuO1xuICAgIGdldFBhZ2VDb3VudCgpOiBudW1iZXI7XG4gICAgY2FsY3VsYXRlUGFnZUxpbmtCb3VuZGFyaWVzKCk6IG51bWJlcltdO1xuICAgIHVwZGF0ZVBhZ2VMaW5rcygpOiB2b2lkO1xuICAgIGNoYW5nZVBhZ2UocDogbnVtYmVyKTogdm9pZDtcbiAgICB1cGRhdGVGaXJzdCgpOiB2b2lkO1xuICAgIGdldFBhZ2UoKTogbnVtYmVyO1xuICAgIGNoYW5nZVBhZ2VUb0ZpcnN0KGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIGNoYW5nZVBhZ2VUb1ByZXYoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgY2hhbmdlUGFnZVRvTmV4dChldmVudDogYW55KTogdm9pZDtcbiAgICBjaGFuZ2VQYWdlVG9MYXN0KGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIG9uUGFnZUxpbmtDbGljayhldmVudDogYW55LCBwYWdlOiBhbnkpOiB2b2lkO1xuICAgIG9uUnBwQ2hhbmdlKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHVwZGF0ZVBhZ2luYXRvclN0YXRlKCk6IHZvaWQ7XG4gICAgcmVhZG9ubHkgY3VycmVudFBhZ2VSZXBvcnQ6IHN0cmluZztcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBhZ2luYXRvck1vZHVsZSB7XG59XG4iXX0=