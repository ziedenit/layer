import { ElementRef, OnInit, AfterContentInit, EventEmitter, QueryList, TemplateRef, OnChanges, SimpleChanges } from '@angular/core';
import { BlockableUI } from 'primeng/api';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/api';
import * as ɵngcc3 from 'primeng/paginator';
export declare class DataView implements OnInit, AfterContentInit, BlockableUI, OnChanges {
    el: ElementRef;
    layout: string;
    paginator: boolean;
    rows: number;
    totalRecords: number;
    pageLinks: number;
    rowsPerPageOptions: any[];
    paginatorPosition: string;
    alwaysShowPaginator: boolean;
    paginatorDropdownAppendTo: any;
    paginatorDropdownScrollHeight: string;
    currentPageReportTemplate: string;
    showCurrentPageReport: boolean;
    lazy: boolean;
    emptyMessage: string;
    onLazyLoad: EventEmitter<any>;
    style: any;
    styleClass: string;
    trackBy: Function;
    filterBy: string;
    loading: boolean;
    loadingIcon: string;
    first: number;
    sortField: string;
    sortOrder: number;
    value: any[];
    onPage: EventEmitter<any>;
    onSort: EventEmitter<any>;
    onChangeLayout: EventEmitter<any>;
    header: any;
    footer: any;
    templates: QueryList<any>;
    _value: any[];
    listItemTemplate: TemplateRef<any>;
    gridItemTemplate: TemplateRef<any>;
    itemTemplate: TemplateRef<any>;
    paginatorLeftTemplate: TemplateRef<any>;
    paginatorRightTemplate: TemplateRef<any>;
    filteredValue: any[];
    filterValue: string;
    initialized: boolean;
    constructor(el: ElementRef);
    ngOnInit(): void;
    ngOnChanges(simpleChanges: SimpleChanges): void;
    ngAfterContentInit(): void;
    updateItemTemplate(): void;
    changeLayout(layout: string): void;
    updateTotalRecords(): void;
    paginate(event: any): void;
    sort(): void;
    isEmpty(): boolean;
    createLazyLoadMetadata(): any;
    getBlockableElement(): HTMLElement;
    filter(filter: string, filterMatchMode?: string): void;
    hasFilter(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DataView>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DataView, "p-dataView", never, {
    "layout": "layout";
    "pageLinks": "pageLinks";
    "paginatorPosition": "paginatorPosition";
    "alwaysShowPaginator": "alwaysShowPaginator";
    "paginatorDropdownScrollHeight": "paginatorDropdownScrollHeight";
    "currentPageReportTemplate": "currentPageReportTemplate";
    "emptyMessage": "emptyMessage";
    "trackBy": "trackBy";
    "loadingIcon": "loadingIcon";
    "first": "first";
    "totalRecords": "totalRecords";
    "rows": "rows";
    "paginator": "paginator";
    "rowsPerPageOptions": "rowsPerPageOptions";
    "paginatorDropdownAppendTo": "paginatorDropdownAppendTo";
    "showCurrentPageReport": "showCurrentPageReport";
    "lazy": "lazy";
    "style": "style";
    "styleClass": "styleClass";
    "filterBy": "filterBy";
    "loading": "loading";
    "sortField": "sortField";
    "sortOrder": "sortOrder";
    "value": "value";
}, {
    "onLazyLoad": "onLazyLoad";
    "onPage": "onPage";
    "onSort": "onSort";
    "onChangeLayout": "onChangeLayout";
}, ["header", "footer", "templates"]>;
}
export declare class DataViewLayoutOptions {
    dv: DataView;
    style: any;
    styleClass: string;
    constructor(dv: DataView);
    changeLayout(event: Event, layout: string): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DataViewLayoutOptions>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DataViewLayoutOptions, "p-dataViewLayoutOptions", never, {
    "style": "style";
    "styleClass": "styleClass";
}, {}, never>;
}
export declare class DataViewModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DataViewModule, [typeof DataView, typeof DataViewLayoutOptions], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.SharedModule, typeof ɵngcc3.PaginatorModule], [typeof DataView, typeof ɵngcc2.SharedModule, typeof DataViewLayoutOptions]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DataViewModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YXZpZXcuZC50cyIsInNvdXJjZXMiOlsiZGF0YXZpZXcuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF3REE7Ozs7Ozs7Ozs7OztBQU9BOzs7O0FBRUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBPbkluaXQsIEFmdGVyQ29udGVudEluaXQsIEV2ZW50RW1pdHRlciwgUXVlcnlMaXN0LCBUZW1wbGF0ZVJlZiwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCbG9ja2FibGVVSSB9IGZyb20gJ3ByaW1lbmcvYXBpJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIERhdGFWaWV3IGltcGxlbWVudHMgT25Jbml0LCBBZnRlckNvbnRlbnRJbml0LCBCbG9ja2FibGVVSSwgT25DaGFuZ2VzIHtcbiAgICBlbDogRWxlbWVudFJlZjtcbiAgICBsYXlvdXQ6IHN0cmluZztcbiAgICBwYWdpbmF0b3I6IGJvb2xlYW47XG4gICAgcm93czogbnVtYmVyO1xuICAgIHRvdGFsUmVjb3JkczogbnVtYmVyO1xuICAgIHBhZ2VMaW5rczogbnVtYmVyO1xuICAgIHJvd3NQZXJQYWdlT3B0aW9uczogYW55W107XG4gICAgcGFnaW5hdG9yUG9zaXRpb246IHN0cmluZztcbiAgICBhbHdheXNTaG93UGFnaW5hdG9yOiBib29sZWFuO1xuICAgIHBhZ2luYXRvckRyb3Bkb3duQXBwZW5kVG86IGFueTtcbiAgICBwYWdpbmF0b3JEcm9wZG93blNjcm9sbEhlaWdodDogc3RyaW5nO1xuICAgIGN1cnJlbnRQYWdlUmVwb3J0VGVtcGxhdGU6IHN0cmluZztcbiAgICBzaG93Q3VycmVudFBhZ2VSZXBvcnQ6IGJvb2xlYW47XG4gICAgbGF6eTogYm9vbGVhbjtcbiAgICBlbXB0eU1lc3NhZ2U6IHN0cmluZztcbiAgICBvbkxhenlMb2FkOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBzdHlsZTogYW55O1xuICAgIHN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICB0cmFja0J5OiBGdW5jdGlvbjtcbiAgICBmaWx0ZXJCeTogc3RyaW5nO1xuICAgIGxvYWRpbmc6IGJvb2xlYW47XG4gICAgbG9hZGluZ0ljb246IHN0cmluZztcbiAgICBmaXJzdDogbnVtYmVyO1xuICAgIHNvcnRGaWVsZDogc3RyaW5nO1xuICAgIHNvcnRPcmRlcjogbnVtYmVyO1xuICAgIHZhbHVlOiBhbnlbXTtcbiAgICBvblBhZ2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uU29ydDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25DaGFuZ2VMYXlvdXQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGhlYWRlcjogYW55O1xuICAgIGZvb3RlcjogYW55O1xuICAgIHRlbXBsYXRlczogUXVlcnlMaXN0PGFueT47XG4gICAgX3ZhbHVlOiBhbnlbXTtcbiAgICBsaXN0SXRlbVRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGdyaWRJdGVtVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgaXRlbVRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIHBhZ2luYXRvckxlZnRUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBwYWdpbmF0b3JSaWdodFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGZpbHRlcmVkVmFsdWU6IGFueVtdO1xuICAgIGZpbHRlclZhbHVlOiBzdHJpbmc7XG4gICAgaW5pdGlhbGl6ZWQ6IGJvb2xlYW47XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoc2ltcGxlQ2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQ7XG4gICAgdXBkYXRlSXRlbVRlbXBsYXRlKCk6IHZvaWQ7XG4gICAgY2hhbmdlTGF5b3V0KGxheW91dDogc3RyaW5nKTogdm9pZDtcbiAgICB1cGRhdGVUb3RhbFJlY29yZHMoKTogdm9pZDtcbiAgICBwYWdpbmF0ZShldmVudDogYW55KTogdm9pZDtcbiAgICBzb3J0KCk6IHZvaWQ7XG4gICAgaXNFbXB0eSgpOiBib29sZWFuO1xuICAgIGNyZWF0ZUxhenlMb2FkTWV0YWRhdGEoKTogYW55O1xuICAgIGdldEJsb2NrYWJsZUVsZW1lbnQoKTogSFRNTEVsZW1lbnQ7XG4gICAgZmlsdGVyKGZpbHRlcjogc3RyaW5nLCBmaWx0ZXJNYXRjaE1vZGU/OiBzdHJpbmcpOiB2b2lkO1xuICAgIGhhc0ZpbHRlcigpOiBib29sZWFuO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRGF0YVZpZXdMYXlvdXRPcHRpb25zIHtcbiAgICBkdjogRGF0YVZpZXc7XG4gICAgc3R5bGU6IGFueTtcbiAgICBzdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3IoZHY6IERhdGFWaWV3KTtcbiAgICBjaGFuZ2VMYXlvdXQoZXZlbnQ6IEV2ZW50LCBsYXlvdXQ6IHN0cmluZyk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEYXRhVmlld01vZHVsZSB7XG59XG4iXX0=